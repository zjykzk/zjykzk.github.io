<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zencode</title>
    <link>http://zjykzk.github.io/index.xml</link>
    <description>Recent content on zencode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>zhangkai.zju@gmail.com (zenk)</managingEditor>
    <webMaster>zhangkai.zju@gmail.com (zenk)</webMaster>
    <copyright>(c) 2016 zenk.</copyright>
    <lastBuildDate>Thu, 19 Jan 2017 14:05:14 +0800</lastBuildDate>
    <atom:link href="http://zjykzk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>字符串</title>
      <link>http://zjykzk.github.io/str/</link>
      <pubDate>Thu, 19 Jan 2017 14:05:14 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/str/</guid>
      <description>

&lt;h1 id=&#34;为什么要字符&#34;&gt;为什么要字符&lt;/h1&gt;

&lt;p&gt;人类发明了文字，同时想用计算机来处理文字。由此，就产生了字符。每个字符代码一个文字的图形。&lt;/p&gt;

&lt;h1 id=&#34;字符串的表示&#34;&gt;字符串的表示&lt;/h1&gt;

&lt;p&gt;在计算机内部，只有01的信息。因此，为了能让计算机能够认识字符串，每个字符就的被映射成01数据。这个映射功能就叫编码。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ASCII&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ASCII是美国19世纪60年代发明的一种编码，总共规定了128个字符，每个字符有1个字节大小。范围从0-127，比如&lt;code&gt;A&lt;/code&gt;的编码是&lt;code&gt;01000001&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Unicode&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;世界语言文字异常丰富，每个国家都有自己独特的语言文字。ASCII的编码无法编码所有的文字，因此产生了很多编码，比如中文的BIG5，GB2312等等。这些编码无法兼容，比如&lt;code&gt;中&lt;/code&gt;在GB2312编码是&lt;code&gt;1101011011010000&lt;/code&gt;，BIG5的编码是&lt;code&gt;1010010010100100&lt;/code&gt;。因此，Unicode就出现了。Unicode规定了每个字符的唯一编号，目前已经有100多万个字符。需要注意的是Unicode只规定了字符的编号，没有规定二进制的表示。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Utf8编码&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;utf8是Ken Thompson于1992年创建，现在已经标准化为RFC 3629。是目前使用最为广泛的unicode编码方式，其他的有utf-16，utf-32。它的特点是变长的，使用1-4个字节表示一个字符，不同的符号有不同的长度。&lt;/p&gt;

&lt;p&gt;utf8编码规则：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;一个字节的编码，最高位为0，其他的位表示unicode编号&lt;/li&gt;
&lt;li&gt;n个字节的编码（n&amp;gt;1），第一个字节的n位都是1，第n+1位是0，后面的每个字节的最高两位都是10，其余的位用来表示unicode编号&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下表表示了utf8的编码，z表示用于编码的bit&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;| unicode范围                       | utf8编码                              |
   | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; |
   | 十六进制表示                          | 二进制表示                               |
   | 000000 - 00007F                 | 0zzzzzzz                            |
   | 000080 - 0007FF                 | 110zzzzz 10zzzzzz                   |
   | 000800 - 00D7FF/00E000 - 00FFFF | 1110zzzz 10zzzzzz 10zzzzzz          |
   | 010000 - 10FFFF                 | 11110zzz 10zzzzzz 10zzzzzz 10zzzzzz |&lt;/p&gt;

&lt;h1 id=&#34;环境中的编码&#34;&gt;环境中的编码&lt;/h1&gt;

&lt;p&gt;一个程序读取字符的输入的时候，读取的是二进制的数据。如果程序需要理解这个字符串是什么意思，必须了解字符的编码。同理，程序输出字符串的时候必须告知字符串的编码，不然使用者就无法理解程序的输出。程序中遇到乱码的问题，都是因为一个程序输出的字符串的编码和另一个程序接受字符串时使用的编码不一致导致的。因此，在解决编码的问题的思路就是搞清楚涉及到了哪几个环境。&lt;/p&gt;

&lt;p&gt;比如：一个程序打印一个字符串到终端。程序的编码是utf8，终端显示的编码是gbk。这样就会造成乱码。&lt;/p&gt;

&lt;h1 id=&#34;不同语言的字符串的支持&#34;&gt;不同语言的字符串的支持&lt;/h1&gt;

&lt;h2 id=&#34;python-中的字符串&#34;&gt;python 中的字符串&lt;/h2&gt;

&lt;h3 id=&#34;python-2&#34;&gt;python 2&lt;/h3&gt;

&lt;h4 id=&#34;字符类型&#34;&gt;字符类型&lt;/h4&gt;

&lt;p&gt;分为byte字符串(str)和unicode(unicode)，前者的内容是字节，后者的内容是unicode中的编号。默认的是byte字符串。&lt;/p&gt;

&lt;h4 id=&#34;重要方法&#34;&gt;重要方法&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;# &amp;lt;type &#39;str&#39;&amp;gt; to &amp;lt;type &#39;unicode&#39;&amp;gt;
# 如果 s 是&#39;unicode&#39;类型，python会先通过encode函数把s转换成&#39;str&#39;类型，而encode函数的encoding是sys.getdefaultencoding()的值
s.decode(encoding)

# &amp;lt;type &#39;unicode&#39;&amp;gt; to &amp;lt;type &#39;str&#39;&amp;gt;
# 如果u是&#39;str&#39;类型，python会通过decode函数把u转换成&#39;unicode&#39;类型，而decode函数的encoding是sys.getdefaultencoding()的值
u.encode(encoding)

# 获取系统默认的编码
sys.getdefaultencoding()

# 修改系统的默认编码
sys.setdefaultencoding(encoding)

# 修改代码
import sys
reload(sys) # 因为python初始化的时候会把setdefaultencoding方法给删除掉
sys.setdefaultencoding(&#39;utf8&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;codecs&#34;&gt;codecs&lt;/h4&gt;

&lt;p&gt;指定encoding参数生成file-object-like对象，利用：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;函数&lt;code&gt;read&lt;/code&gt; 读取byte字符串，按照encoding的编码返回unicode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write&lt;/code&gt; 输入unicode，按照encoding的编码转换成byte字符串写入文件&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python-3&#34;&gt;python 3&lt;/h3&gt;

&lt;p&gt;显然，python2中的字符串处理方式会变得复杂，因此在python3中字符串统一都是unicode。&lt;/p&gt;

&lt;h2 id=&#34;go中的字符串&#34;&gt;go中的字符串&lt;/h2&gt;

&lt;p&gt;go中有两种类型支持字符串分别是：&lt;code&gt;string&lt;/code&gt;和&lt;code&gt;rune&lt;/code&gt;。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;string表示字节slice（分片）&lt;/li&gt;
&lt;li&gt;rune表示unicode的编码（code point）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;go对utf8有天然的支持。go的源代码是utf8编码，&lt;code&gt;for ... range&lt;/code&gt;循环字符串的时候也是按照utf8编码来处理每个字符，而不是字节。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>prometheus</title>
      <link>http://zjykzk.github.io/prometheus/</link>
      <pubDate>Sun, 09 Oct 2016 14:45:21 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/prometheus/</guid>
      <description>

&lt;p&gt;prometheus是开源的现代监控系统。它用go开发，发布于2012。
社区热度比较高，功能比较丰富灵活。&lt;/p&gt;

&lt;h2 id=&#34;架构&#34;&gt;架构&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://zjykzk.github.io/imgs/promutheus.arch.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;

&lt;h3 id=&#34;数据模型&#34;&gt;数据模型&lt;/h3&gt;

&lt;p&gt;prometheus把数据当作时间序列进行存储。
每个时间序列通过 &lt;strong&gt;metric name&lt;/strong&gt;和 &lt;strong&gt;key-value pairs&lt;/strong&gt;(也叫做 &lt;strong&gt;label&lt;/strong&gt;)标识。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;metric name&lt;/strong&gt;表示需要进行测量的系统指标。
它允许包含ASCII字母，数字，下划线和分号。
正则表示为：[a-zA-Z&lt;em&gt;:][a-zA-Z0-9&lt;/em&gt;:]*。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;label&lt;/strong&gt;表示一个系统指标的维度，可以按照这个维度进行查询统计。
Label名字允许包含ASCII字母，数字以及下划线。
正则表示为：[a-zA-Z&lt;em&gt;][a-zA-Z0-9&lt;/em&gt;]*。同时，“__”开头的名字系统保留的。
Label值允许任意的Unicode字符&lt;/p&gt;

&lt;h3 id=&#34;度量类型&#34;&gt;度量类型&lt;/h3&gt;

&lt;h4 id=&#34;counter&#34;&gt;Counter&lt;/h4&gt;

&lt;p&gt;累计统计度量的单个值。适用于只增不减度量，比如累计请求数量。&lt;/p&gt;

&lt;h4 id=&#34;gauge&#34;&gt;Gauge&lt;/h4&gt;

&lt;p&gt;统计度量的单个值。适用于可以增减的度量，比如当前的内存使用情况。&lt;/p&gt;

&lt;h4 id=&#34;histogram&#34;&gt;Histogram&lt;/h4&gt;

&lt;p&gt;统计度量事件发生的次数以及度量值的和。还支持统计小于某个阀值的度量事件发生的次数。&lt;/p&gt;

&lt;p&gt;这个度量类型有三个时间序列统计：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;_bucket{le=&amp;laquo;upper inclusive bound&amp;raquo;}：小于某个阀值的度量事件发生的次数&lt;/li&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;_sum：度量值的和&lt;/li&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;_count：度量事件发生的次数&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;

&lt;p&gt;统计度量时间发生的次数以及度量值的和。还支持统计某个百分比内的度量事件发生的次数。&lt;/p&gt;

&lt;p&gt;这个度量类型有三个时间序列统计：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;{quantile=&amp;raquo;&amp;lt;p&amp;gt;&amp;laquo;}：度量值在前百分之p的度量事件发生的次数&lt;/li&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;_sum：度量值的和&lt;/li&gt;
&lt;li&gt;&amp;lt;base_name&amp;gt;_count：度量事件发生的次数&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;job-instance&#34;&gt;Job &amp;amp; Instance&lt;/h3&gt;

&lt;p&gt;在prometheus里面对监控的对象分成Job和Instance。Instance代表一个监控的实例。比如
一个支付进程。Job代表一个监控的逻辑单位。
比如支付服务，它在多台机器上面部署着，每台机器对应一个Instance。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;job: payment-server

&lt;ul&gt;
&lt;li&gt;instance 1: 1.2.3.4:5678&lt;/li&gt;
&lt;li&gt;instance 2: 1.2.3.5:5689&lt;/li&gt;
&lt;li&gt;instance 3: 1.2.3.6:5689&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;自动生成的label和时间序列&#34;&gt;自动生成的label和时间序列&lt;/h4&gt;

&lt;p&gt;当prometheus抓取一个目标的时候，会自动生成时间序列以及label，用来标识抓取的目标状态。&lt;/p&gt;

&lt;p&gt;label:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;job: 配置好的job名字&lt;/li&gt;
&lt;li&gt;instance:&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;格式的url&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;时间序列：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;up{job=&amp;raquo;&amp;lt;job-name&amp;gt;&amp;laquo;, instance=&amp;raquo;&amp;lt;host:port&amp;gt;&amp;laquo;}：1 表示监控目标活着，0表示挂了&lt;/li&gt;
&lt;li&gt;scrape_duration_seconds{job=&amp;raquo;&amp;lt;job-name&amp;gt;&amp;laquo;, instance=&amp;raquo;&amp;lt;host:port&amp;gt;&amp;laquo;}：抓取日志的时间&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>浮点数 IEEE 754</title>
      <link>http://zjykzk.github.io/ieee-754/</link>
      <pubDate>Sun, 05 Jun 2016 20:21:39 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/ieee-754/</guid>
      <description>

&lt;h2 id=&#34;表示&#34;&gt;表示&lt;/h2&gt;

&lt;p&gt;标准IEEE 754中，浮点数由三部分组成符号、指数、尾数。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;符号：表示正负，用&lt;strong&gt;S&lt;/strong&gt;表示，用&lt;strong&gt;Sn&lt;/strong&gt;表示使用的bit数&lt;/li&gt;
&lt;li&gt;指数：2的幂次，用&lt;strong&gt;E&lt;/strong&gt;表示，用&lt;strong&gt;En&lt;/strong&gt;表示使用的bit数&lt;/li&gt;
&lt;li&gt;尾数：小数部分，用&lt;strong&gt;M&lt;/strong&gt;表示，用&lt;strong&gt;Mn&lt;/strong&gt;表示使用的bit数&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
+-----+------+--------+
|  S  |   E  |    M   |
+-----+------+--------+
&lt;/pre&gt;

&lt;h3 id=&#34;单-双精度的bit位数&#34;&gt;单、双精度的bit位数&lt;/h3&gt;

&lt;p&gt;|类型|Sn|En|Mn|Sn+En+Mn|
|&amp;mdash;-|&amp;ndash;|&amp;ndash;|&amp;ndash;|&amp;mdash;&amp;mdash;-|
|单精度|1|8|23|32|
|双精度|1|11|52|64|&lt;/p&gt;

&lt;p&gt;浮点数从二进制到十进制数值的转化分两种情况：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;normalized, E!=0&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;公式：value = (-1)^S * 2^(E - 2^(En - 1) + 1) * (1+M/2^Mn)
例子：&lt;/p&gt;

&lt;p&gt;1.5&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;单精度&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
|&lt;-S-&gt;|&lt;--E---&gt;|&lt;---------M-----------&gt;|
+-----+--------+-----------------------+
|  0  |01111111|10000000000000000000000|
+-----+--------+-----------------------+
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;双精度
&lt;pre&gt;
|&amp;lt;-S-&amp;gt;|&amp;lt;&amp;mdash;-E&amp;mdash;-&amp;gt;|&amp;lt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-M&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&amp;gt;|
+&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+
|  0  |01111111111|100000000000000000000000000000000000000000000000000000|
+&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;denormalized, E==0&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;公式：value = (-1)^S * 2^(2 - 2^(En - 1)) * (M/2^Mn)&lt;/p&gt;

&lt;h3 id=&#34;范围&#34;&gt;范围&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;NAN:not a number，E==2^En - 1，M!=0&lt;/li&gt;
&lt;li&gt;无穷大(小)Infinity: E==2^En - 1, M == 0&lt;/li&gt;
&lt;li&gt;normalized: E!=0&lt;/li&gt;
&lt;li&gt;denormalized: E==0&lt;/li&gt;
&lt;li&gt;最大值：2^(2^(En-1)+1) * (2-2^-Mn)&lt;/li&gt;
&lt;li&gt;最小值：-2^(2 - 2^(En - 1)) * (1-&amp;frac12;^Mn)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;精度&#34;&gt;精度&lt;/h3&gt;

&lt;p&gt;IEEE 754用有限的位数表示整个实数，肯定是不精确。主要表现在几个方面：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;无法覆盖所有实数，也就是说有些数根本无法表示，比如说：0.000000000000000000000001&lt;/li&gt;
&lt;li&gt;无法精确表达某些数，比如：0.3&lt;/li&gt;
&lt;li&gt;十进制精度(两浮点数的差，正确的小数个数)：1/2^Mn，单精度：1/2^23 = 0.0000001192092895507812，精确到6位；双精度：1/2^52 = 0.0000000000000002220446049250313，精确到15位。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;加法&#34;&gt;加法&lt;/h2&gt;

&lt;h2 id=&#34;减法&#34;&gt;减法&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>增加bug的编程实践</title>
      <link>http://zjykzk.github.io/bug-op/</link>
      <pubDate>Sat, 04 Jun 2016 11:12:13 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/bug-op/</guid>
      <description>

&lt;p&gt;最近一个任务，时间比较仓促，需要在老系统上面修改添加功能，结果出现不少bug。小结一下工作中引入bug的一些实践。&lt;/p&gt;

&lt;h2 id=&#34;思路不清晰&#34;&gt;思路不清晰&lt;/h2&gt;

&lt;p&gt;思路没有完全确定情况下写代码。造成不确定的情况有多方面：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. 求快，把相似的需求当做一样的需求
2. 缺少设计，大体明白实现方案，就开始编码
3. 知识不充分，集中在前端的css、布局
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;怎么办？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;快是可以做到，心里不要慌就是。&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. 需求分析到位
2. 仔细查看现有的代码
3. 遗留代码多问老员工
4. 放下别人对你问代码时的负面情绪
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;破窗原理&#34;&gt;破窗原理&lt;/h2&gt;

&lt;p&gt;在一个代码质量差的项目里面，就很容易被一种“别人也是这样，我也就这样得了”，尤其是在你不熟悉代码的情况下。&lt;strong&gt;短期内，代码是写给自己的，维护的人是自己，长期内是给别人的，都自己好就是对别人好，还有就是执行力&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>flume</title>
      <link>http://zjykzk.github.io/flume/</link>
      <pubDate>Sun, 27 Mar 2016 22:17:17 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/flume/</guid>
      <description>

&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;

&lt;p&gt;flume是通用的数据收集框架。特点是分布式、高可靠、高可用、高可定制化。&lt;/p&gt;

&lt;h1 id=&#34;架构&#34;&gt;架构&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://zjykzk.github.io/imgs/flume.dot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;概念&#34;&gt;概念&lt;/h1&gt;

&lt;h2 id=&#34;source&#34;&gt;source&lt;/h2&gt;

&lt;p&gt;数据的生成源。比如：读取一个本地文件，MQ等等。一个数据单元被封装成一个&lt;strong&gt;event&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&#34;event&#34;&gt;event&lt;/h3&gt;

&lt;p&gt;数据单元，从&lt;strong&gt;source&lt;/strong&gt;产生，直到被序列化到存储中。&lt;strong&gt;event&lt;/strong&gt;包含*header*，*body*两个部分：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;header: 一个map数据，可以被&lt;strong&gt;interceptor&lt;/strong&gt;引用&lt;/li&gt;
&lt;li&gt;body: 一个字节序列，具体日志数据&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;interceptor&#34;&gt;interceptor&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;source&lt;/strong&gt;读取一个&lt;strong&gt;event&lt;/strong&gt;在放到&lt;strong&gt;channel&lt;/strong&gt;中之前，&lt;strong&gt;event&lt;/strong&gt;可以被添加数据。比如说：采集机器的主机名称，时间戳。&lt;/p&gt;

&lt;h2 id=&#34;channel&#34;&gt;channel&lt;/h2&gt;

&lt;p&gt;数据队列，高可用的保障。&lt;strong&gt;source&lt;/strong&gt;产生的数据先放到这里，&lt;strong&gt;sink&lt;/strong&gt;接着从这里取出来放到存储当中。&lt;/p&gt;

&lt;h3 id=&#34;channel-selector&#34;&gt;channel selector&lt;/h3&gt;

&lt;p&gt;两个作用：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;复制：把一个&lt;strong&gt;event&lt;/strong&gt;写到一个或者多个&lt;strong&gt;channel&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;路由：根据&lt;strong&gt;event&lt;/strong&gt;中的某个属性值，把数据写到指定的&lt;strong&gt;channel&lt;/strong&gt;中&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;sink&#34;&gt;sink&lt;/h2&gt;

&lt;p&gt;负责把&lt;strong&gt;channel&lt;/strong&gt;中的数据写入目标存储。&lt;/p&gt;

&lt;h3 id=&#34;sink-processor&#34;&gt;sink processor&lt;/h3&gt;

&lt;p&gt;选择&lt;strong&gt;sink&lt;/strong&gt;，在这里可以完成负载均衡和容错处理。&lt;/p&gt;

&lt;h3 id=&#34;event-serializer&#34;&gt;event serializer&lt;/h3&gt;

&lt;p&gt;把&lt;strong&gt;event&lt;/strong&gt;中的数据，转换成存储需要的格式。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>价值博客</title>
      <link>http://zjykzk.github.io/friend-links/</link>
      <pubDate>Mon, 15 Feb 2016 11:19:35 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/friend-links/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://mindhacks.cn/&#34;&gt;&lt;strong&gt;刘未鹏 | MIND HACKS&lt;/strong&gt;&lt;/a&gt;|&lt;a href=&#34;https://groups.google.com/group/pongba&#34;&gt;&lt;strong&gt;TopLanguage&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://groups.google.com/group/python-cn&#34;&gt;PythonCN&lt;/a&gt; | &lt;a href=&#34;http://erlang-china.org/&#34;&gt;ErlangCN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.codinghorror.com/blog/&#34;&gt;&lt;strong&gt;Coding Horror&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://highscalability.com/&#34;&gt;High Scalability&lt;/a&gt; | &lt;a href=&#34;http://www.infoq.com/cn&#34;&gt;&lt;strong&gt;InfoQ&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.reddit.com/r/programming/&#34;&gt;&lt;strong&gt;Reddit&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://stackoverflow.com/&#34;&gt;&lt;strong&gt;Stack Overflow&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://steve-yegge.blogspot.com/&#34;&gt;Steve Yegge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ued.taobao.com/blog&#34;&gt;淘宝UED团队&lt;/a&gt; | &lt;a href=&#34;http://rdc.taobao.com/blog/dw&#34;&gt;淘宝数据仓库团队&lt;/a&gt; | &lt;a href=&#34;http://www.ginkgotek.com/&#34;&gt;&lt;strong&gt;银杏站内搜索&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.fayaa.com/&#34;&gt;代码发芽网&lt;/a&gt; | &lt;a href=&#34;http://it.ju690.com/&#34;&gt;&lt;strong&gt;玩聚网&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://yishan.cc/&#34;&gt;&lt;strong&gt;移山之道&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.beijing-open-party.org/&#34;&gt;&lt;strong&gt;OpenParty@Beijing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sciam.com/&#34;&gt;Scientific American&lt;/a&gt; | &lt;a href=&#34;http://www.sciam.com/sciammind/&#34;&gt;&lt;strong&gt;Scientific American Mind&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://songshuhui.net/&#34;&gt;&lt;strong&gt;科学松鼠会&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.sfw-cd.com/&#34;&gt;科幻世界&lt;/a&gt; | &lt;a href=&#34;http://www.xingfuke.net/&#34;&gt;&lt;strong&gt;幸福课&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.yeeyan.com/&#34;&gt;&lt;strong&gt;译言&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.mifengtd.cn/&#34;&gt;褪墨&lt;/a&gt; | &lt;a href=&#34;http://www.busiphi.com/&#34;&gt;商业哲学评论&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gezhi.org/&#34;&gt;格致&lt;/a&gt; | &lt;a href=&#34;http://www.bowenwang.com.cn/&#34;&gt;博闻网&lt;/a&gt; | &lt;a href=&#34;http://www.xlxcn.net/&#34;&gt;世纪心理沙龙&lt;/a&gt; | &lt;a href=&#34;http://www.sciam.com.cn/&#34;&gt;&lt;strong&gt;环球科学&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://scienceblogs.com/neurophilosophy/&#34;&gt;&lt;strong&gt;NeuroPhilogophy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.spring.org.uk/&#34;&gt;&lt;strong&gt;PsyBlog – Understand Your Mind&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://scienceblogs.com/cognitivedaily/&#34;&gt;&lt;strong&gt;Cognitive Daily&lt;/strong&gt;&lt;/a&gt; | &lt;strong&gt;&lt;a href=&#34;http://bambooman.spaces.live.com/blog/&#34;&gt;张峥&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/alai04&#34;&gt;alai&lt;/a&gt; | &lt;a href=&#34;http://chenyufei.name/blog&#34;&gt;chenyufei&lt;/a&gt; | &lt;a href=&#34;http://cuitianyi.com/blog/&#34;&gt;dd&lt;/a&gt; | &lt;a href=&#34;http://dreamhead.blogbus.com/&#34;&gt;&lt;strong&gt;郑晔(DreamHead)&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://googollee.blog.163.com/&#34;&gt;Googol&lt;/a&gt; | &lt;a href=&#34;http://jawley.com/&#34;&gt;Jawley&lt;/a&gt; | &lt;a href=&#34;http://joyfire.spaces.live.com/&#34;&gt;Joyfire&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/lxwde&#34;&gt;lxwde&lt;/a&gt; | &lt;a href=&#34;http://www.matrix67.com/blog/&#34;&gt;&lt;strong&gt;Matrix67&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.2maomao.com/blog/&#34;&gt;&lt;strong&gt;任中方&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.cnblogs.com/riceball/&#34;&gt;RiceBall&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/roofalison/&#34;&gt;roofalison&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/soloist&#34;&gt;soloist&lt;/a&gt; | &lt;a href=&#34;http://www.tinydust.net/prog/diary/diary.htm&#34;&gt;&lt;strong&gt;郝培强(Tinyfool)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwind.cn/&#34;&gt;&lt;strong&gt;Windstorm&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blogs.sun.com/yongsun&#34;&gt;YongSun&lt;/a&gt; | &lt;a href=&#34;http://huangshujian.spaces.live.com/&#34;&gt;书剑&lt;/a&gt; | &lt;a href=&#34;http://blog.codingnow.com/&#34;&gt;&lt;strong&gt;云风&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.luanxiang.org/&#34;&gt;&lt;strong&gt;余晟&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/yuankaining/&#34;&gt;元凯宁&lt;/a&gt; | &lt;a href=&#34;http://www.dbanotes.net/&#34;&gt;&lt;strong&gt;冯大辉(Fenng)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://liuxinyu95.googlepages.com/&#34;&gt;刘新宇&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/turingbook&#34;&gt;&lt;strong&gt;刘江@图灵&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.polyrandom.com/&#34;&gt;史晓明&lt;/a&gt; | &lt;a href=&#34;http://www.sinrain.cn/&#34;&gt;吴新雨&lt;/a&gt; | &lt;a href=&#34;http://blog.vckbase.com/bruceteen/&#34;&gt;周星星&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/yeka&#34;&gt;&lt;strong&gt;周筠@博文视点&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/myan&#34;&gt;&lt;strong&gt;孟岩&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://zhiqiang.org/blog/&#34;&gt;张志强|阅微堂&lt;/a&gt; | &lt;a href=&#34;http://cnzhangzhen.spaces.live.com/&#34;&gt;张振&lt;/a&gt; | &lt;a href=&#34;http://blog.youxu.info/&#34;&gt;&lt;strong&gt;徐宥|4G Spaces&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/kingofark&#34;&gt;方舟@博文视点&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/zdg&#34;&gt;曾登高&lt;/a&gt; | &lt;a href=&#34;http://xiaolai.net/&#34;&gt;&lt;strong&gt;李笑来|Pure Pleasure&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://hi.baidu.com/yjpro&#34;&gt;杨军&lt;/a&gt; | &lt;a href=&#34;http://blog.solrex.cn/&#34;&gt;杨文博&lt;/a&gt; | &lt;a href=&#34;http://gigix.thoughtworkers.org/&#34;&gt;&lt;strong&gt;熊节&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://verypig.com/&#34;&gt;王信文&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.vgoogle.net/&#34;&gt;王康生&lt;/a&gt; | &lt;a href=&#34;http://iamsujie.com/&#34;&gt;&lt;strong&gt;苏杰@阿里巴巴&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.cnblogs.com/duguguiyu&#34;&gt;范怀宇&lt;/a&gt; | &lt;a href=&#34;http://www.royaloo.com/&#34;&gt;荣耀&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/longshanks&#34;&gt;莫华枫&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/jiangtao&#34;&gt;蒋涛&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/program_think&#34;&gt;&lt;strong&gt;编程随想&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/g9yuayon&#34;&gt;&lt;strong&gt;袁泳(g9)|负暄琐话&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/xushiweizh&#34;&gt;许式伟&lt;/a&gt; | &lt;a href=&#34;http://dongshengxie.spaces.live.com/&#34;&gt;谢东升&lt;/a&gt; | &lt;a href=&#34;http://guwendong.cn/&#34;&gt;&lt;strong&gt;谷文栋|Beyond Search&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://w3er.com/&#34;&gt;w3er&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://yishan.cc/blogs/xin/default.aspx&#34;&gt;&lt;strong&gt;邹欣@MSRA&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/zhengyun_ustc&#34;&gt;&lt;strong&gt;郑昀&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/david_lv&#34;&gt;&lt;strong&gt;阿朱&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/childchen&#34;&gt;陈冀康@华章&lt;/a&gt; | &lt;a href=&#34;http://silwile.net/&#34;&gt;陈怀兴&lt;/a&gt; | &lt;a href=&#34;http://wesleybao.spaces.live.com/&#34;&gt;&lt;strong&gt;鲍志云&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.lanrenux.com/&#34;&gt;&lt;strong&gt;懒人有禅&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.xiqiao.info/&#34;&gt;&lt;strong&gt;西乔&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.devep.net/virushuo/&#34;&gt;&lt;strong&gt;霍炬&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://johnthu.spaces.live.com/&#34;&gt;胡江堂&lt;/a&gt; | &lt;a href=&#34;http://nidayede.cn/&#34;&gt;&lt;strong&gt;璎珞&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/futurelight&#34;&gt;霍泰稳&lt;/a&gt; | &lt;a href=&#34;http://blog.linjian.org/&#34;&gt;林健&lt;/a&gt; | &lt;a href=&#34;http://blog.nona.name/&#34;&gt;&lt;strong&gt;冰云&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.chedong.com/&#34;&gt;&lt;strong&gt;车东&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.zhangkf.com/&#34;&gt;张凯峰&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jshisan.yculblog.com/&#34;&gt;&lt;strong&gt;姬十三&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://smarttesting.spaces.live.com/&#34;&gt;&lt;strong&gt;史亮|SmartTesting&lt;/strong&gt;&lt;/a&gt; | &lt;strong&gt;&lt;a href=&#34;http://www.duniuniu.com/&#34;&gt;杜牛牛&lt;/a&gt; | &lt;a href=&#34;http://blog.jorywang.com/&#34;&gt;放牛者说&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.delphij.net/&#34;&gt;Delphij&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/fatalerror99&#34;&gt;fatalerror99&lt;/a&gt; | &lt;a href=&#34;http://home.wangjianshuo.com/mvm/&#34;&gt;flow with the life&lt;/a&gt; | &lt;a href=&#34;http://www.winbox.org/&#34;&gt;Glacier&lt;/a&gt; | &lt;a href=&#34;http://www.jimaxsoft.net/&#34;&gt;jimaxsoft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;mailto:lifesinger@%E6%B7%98%E5%AE%9DUED&#34;&gt;lifesinger@淘宝UED&lt;/a&gt; | &lt;a href=&#34;http://mr6.cc/&#34;&gt;Mr. 6&lt;/a&gt; | &lt;a href=&#34;http://realazy.org/blog/&#34;&gt;realazy&lt;/a&gt; | &lt;a href=&#34;http://robbin.javaeye.com/&#34;&gt;&lt;strong&gt;Robbin&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://epic.32o.cn/&#34;&gt;SpiritEpic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hi.baidu.com/tombkeeper&#34;&gt;TK&lt;/a&gt; | &lt;a href=&#34;http://wuyizi.spaces.live.com/&#34;&gt;wuyizi&lt;/a&gt; | &lt;a href=&#34;http://yelz.spaces.live.com/&#34;&gt;Yelz&lt;/a&gt; | &lt;a href=&#34;http://tintin.sfview.org/&#34;&gt;丁丁虫&lt;/a&gt; | &lt;a href=&#34;http://ifire.cn/&#34;&gt;付翀&lt;/a&gt; | &lt;a href=&#34;http://blog.sina.com.cn/lcx&#34;&gt;&lt;strong&gt;刘慈欣&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.changhai.org/&#34;&gt;&lt;strong&gt;卢昌海&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.luoyonghao.net/blogs/luoyonghao/&#34;&gt;&lt;strong&gt;老罗&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://immusoul.com/&#34;&gt;&lt;strong&gt;土摩托&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.wuxinan.net/&#34;&gt;吴欣安(atppp)&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/aimingoo/&#34;&gt;&lt;strong&gt;周爱民&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.hecaitou.net/&#34;&gt;和菜头&lt;/a&gt; |  | &lt;a href=&#34;http://www.watch-life.net/&#34;&gt;守望轩&lt;/a&gt; | &lt;a href=&#34;http://flowerfei.com/&#34;&gt;小花&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://dahua.spaces.live.com/&#34;&gt;林达华&lt;/a&gt; | &lt;a href=&#34;http://www.puyuping.com/&#34;&gt;浦宇平&lt;/a&gt; | &lt;a href=&#34;http://uicom.net/blog/&#34;&gt;&lt;strong&gt;白鸦&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.csdn.net/hellothere/&#34;&gt;程化&lt;/a&gt; | &lt;a href=&#34;http://meditic.com/&#34;&gt;&lt;strong&gt;罗浩|Startup Game&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://www.ruanyifeng.com/blog/&#34;&gt;&lt;strong&gt;阮一峰&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.charlesgao.com/&#34;&gt;高远&lt;/a&gt; | &lt;a href=&#34;http://fsbao.net/&#34;&gt;鲍盛&lt;/a&gt; | &lt;a href=&#34;http://xiaoxiao.com.cn/&#34;&gt;Xiaoxiao&lt;/a&gt; | &lt;a href=&#34;http://blog.pluskid.org/&#34;&gt;&lt;strong&gt;张驰原&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://blog.donews.com/keso&#34;&gt;&lt;strong&gt;Keso&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;http://ethinker.blog.china.alibaba.com/&#34;&gt;&lt;strong&gt;思践&lt;/strong&gt;&lt;/a&gt;|&lt;a href=&#34;http://tonybai.com/&#34;&gt;Tony Bai&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://zjykzk.github.io/about/</link>
      <pubDate>Tue, 02 Feb 2016 21:33:21 +0800</pubDate>
      <author>zhangkai.zju@gmail.com (zenk)</author>
      <guid>http://zjykzk.github.io/about/</guid>
      <description>&lt;p&gt;还在努力学习思考。。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>